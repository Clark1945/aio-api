#version: '3'
#services:
#  postgres:
#    image: postgres:14
#    container_name: postgres
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: 123456
#      POSTGRES_DB: practice
#    ports:
#      - "5432:5432"
#
#  mongodb:
#    image: mongo:4.4
#    container_name: mongo
#    ports:
#      - "27017:27017"
#
#  rabbitmq:
#    image: rabbitmq:management
#    container_name: rabbitmq
#    environment:
#      RABBITMQ_DEFAULT_USER: guest
#      RABBITMQ_DEFAULT_PASS: guest
#    ports:
#      - "5672:5672"
#      - "15672:15672"
#
#  zookeeper:
#    image: confluentinc/cp-zookeeper:7.0.1
#    container_name: zookeeper
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - "2181:2181"
#
#  kafka:
#    image: confluentinc/cp-kafka:7.0.1
#    container_name: kafka
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#    ports:
#      - "9092:9092"
#    depends_on:
#      - zookeeper
#
#  aio-api:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: aio-api
#    depends_on:
#      - postgres
#      - mongodb
#      - rabbitmq
#      - kafka
#    ports:
#      - "8080:8080"
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/practice
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: 123456
#      SPRING_RABBITMQ_HOST: rabbitmq
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/practice

version: '3'
services:
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: practice
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5

  aio-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aio-api
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/practice
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 123456

